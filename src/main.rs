use std::{io::{self, Write}, usize};
use indoc::indoc;

pub const WIDTH: usize = 5;
pub const HEIGHT: usize = 5;
#[derive(Clone, Copy)]
pub enum Block{
    Air,
    Wall,
}

use Block::*;
pub static MAP: [[Block;WIDTH];HEIGHT] = [
    [Air, Wall, Wall, Wall, Wall],
    [Air, Wall, Air, Wall, Air],
    [Air, Wall, Air, Air, Air],
    [Air, Wall, Air, Wall, Air],
    [Air, Air, Air, Air, Air],
];

pub const PATTERNS: [&str; 13] = [
    indoc! { r#"
    ╔════════════════════════╗
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║____````````````````````║
    ║    |:``````````````````║
    ║____|:``````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ╚════════════════════════╝"#
},
indoc! { r#"
    ╔════════════════════════╗
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````____║
    ║``````````````````:|    ║
    ║``````````````````:|____║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ╚════════════════════════╝"#
},
indoc! { r#"
    ╔════════════════════════╗
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║`````____```````````````║
    ║````|    |:`````````````║
    ║````|____|:`````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ╚════════════════════════╝"#
},
indoc! { r#"
    ╔════════════════════════╗
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║```````````````____`````║
    ║`````````````:|    |````║
    ║`````````````:|____|````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ╚════════════════════════╝"#
},
indoc! { r#"
    ╔════════════════════════╗
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║``````````____``````````║
    ║`````````|    |`````````║
    ║`````````|____|`````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ╚════════════════════════╝"#
},
indoc! { r#"
    ╔════════════════════════╗
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║_______.````````````````║
    ║       |'.``````````````║
    ║       | |``````````````║
    ║       | |``````````````║
    ║_______|.'``````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ╚════════════════════════╝"#
},
indoc! { r#"
    ╔════════════════════════╗
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````._______║
    ║``````````````.'|       ║
    ║``````````````| |       ║
    ║``````````````| |       ║
    ║``````````````'.|_______║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ╚════════════════════════╝"#
},
indoc! { r#"
    ╔════════════════════════╗
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````________````````║
    ║```````|        |```````║
    ║```````|        |```````║
    ║```````|        |```````║
    ║```````|________|```````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ╚════════════════════════╝"#
},
indoc! { r#"
    ╔════════════════════════╗
    ║````````````````````````║
    ║___`````````````````````║
    ║   |'.``````````````````║
    ║   |  '.````````````````║
    ║   |   |````````````````║
    ║   |   |````````````````║
    ║   |   |````````````````║
    ║   |   |````````````````║
    ║   |  .'````````````````║
    ║___|.'``````````````````║
    ║````````````````````````║
    ║````````````````````````║
    ╚════════════════════════╝"#
},
indoc! { r#"
    ╔════════════════════════╗
    ║````````````````````````║
    ║`````````````````````___║
    ║``````````````````.'|   ║
    ║````````````````.'  |   ║
    ║````````````````|   |   ║
    ║````````````````|   |   ║
    ║````````````````|   |   ║
    ║````````````````|   |   ║
    ║````````````````'.  |   ║
    ║``````````````````'.|___║
    ║````````````````````````║
    ║````````````````````````║
    ╚════════════════════════╝"#
},
indoc! { r#"
    ╔════════════════════════╗
    ║````````````````````````║
    ║````________________````║
    ║```|                |```║
    ║```|                |```║
    ║```|                |```║
    ║```|                |```║
    ║```|                |```║
    ║```|                |```║
    ║```|                |```║
    ║```|________________|```║
    ║````````````````````````║
    ║````````````````````````║
    ╚════════════════════════╝"#
},
indoc! { r#"
    ╔════════════════════════╗
    ║'.``````````````````````║
    ║  '.````````````````````║
    ║   |````````````````````║
    ║   |````````````````````║
    ║   |````````````````````║
    ║   |````````````````````║
    ║   |````````````````````║
    ║   |````````````````````║
    ║   |````````````````````║
    ║   |````````````````````║
    ║  .'````````````````````║
    ║.'``````````````````````║
    ╚════════════════════════╝"#
},
indoc! { r#"
    ╔════════════════════════╗
    ║``````````````````````.'║
    ║````````````````````.'  ║
    ║````````````````````|   ║
    ║````````````````````|   ║
    ║````````````````````|   ║
    ║````````````````````|   ║
    ║````````````````````|   ║
    ║````````````````````|   ║
    ║````````````````````|   ║
    ║````````````````````|   ║
    ║````````````````````'.  ║
    ║``````````````````````'.║
    ╚════════════════════════╝"#
},
];

#[derive(Clone, Copy)]
pub enum Direction {
    North, 
    East,
    South,
    West,
}
pub struct Player {
    x: usize,
    y: usize,
    direction: Direction,
}
fn main(){
    impl Player {
        pub fn new(x: usize, y: usize, direction: Direction) -> Self {
            Player { x, y, direction }
        }
        fn forward(&mut self) {
            let (dx, dy) = match self.direction {
                Direction::North => (0, -1),
                Direction::East => (1, 0),
                Direction::South => (0, 1), 
                Direction::West => (-1, 0), 
            };
            let x = self.x.checked_add_signed(dx);
            let y = self.y.checked_add_signed(dy);
            let block = match(x,y){
                (Some(x),Some(y)) if x<WIDTH && y<HEIGHT => MAP[y][x],
                _ => Block::Wall
            };
            match block {
                Block::Air =>{self.x = x.unwrap()},
                Block::Wall => 
            }
        }
    }
}